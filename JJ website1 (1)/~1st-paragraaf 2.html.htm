<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head>  <title>Untitled</title>  <meta name="GENERATOR" content="WDL-Website-Builder" /></head><body bgcolor="#EAAB82" link="#FF3399" alink="#FF0066" vlink="#FF0066">  <p align="center"><font face="Verdana"><font size="4"><strong><span data-contrast="auto">Waar verschillende programmeertalen voor gebruikt worden:</span></strong><span data-ccp-props=  '{"335559685":2160}'>&nbsp;</span></font></font></p>  <p><span data-ccp-props='{"335559685":2160}'><font face="Verdana" size="4">&nbsp;</font></span></p>  <p><span data-ccp-props='{"335559685":2160}'><font face="Verdana" size="4">&nbsp;</font></span></p>  <p><span data-ccp-props='{"335559685":2160}'><font face="Verdana" size="4">&nbsp;</font></span></p>  <p><span data-ccp-props='{"335559685":2160}'><font face="Verdana"><font size="4">&nbsp;<span data-ccp-props='{"335559685":2160}'><span data-contrast="none">Er zijn verschillende manieren waarop een  door een softwareontwikkelaar geschreven&nbsp;computerprogrammeertaal&nbsp;door een computer uitgevoerd kan worden. De code die de ontwikkelaar ziet en bewerkt, wordt de&nbsp;broncode&nbsp;van de  programmatuur genoemd; die moet op de een of andere manier worden omgezet in de&nbsp;machinetaal&nbsp;van de computer in kwestie die door de&nbsp;processor&nbsp;kan worden uitgevoerd. Grosso modo  zijn er de volgende mogelijkheden:</span><span data-ccp-props="{}">&nbsp;</span></span></font></font></span></p>  <ul>    <li data-aria-level="1" data-aria-posinset="1" data-list-defn-props=    '{"335552541":1,"335559684":-2,"335559685":720,"335559991":360,"469769226":"Symbol","469769242":[8226],"469777803":"left","469777804":"?","469777815":"multilevel"}' data-listid="1" data-font=    "Symbol" data-leveltext="?"><font face="Verdana"><font size="4"><span data-contrast="none">Geen omzetting: de programmeur voert machinecode direct in het geheugen van de computer in. Dit is zo    onpraktisch en tijdrovend dat het niet of nauwelijks meer gebeurt.</span><span data-ccp-props="{}">&nbsp;</span></font></font></li>  </ul>  <p data-aria-level="1" data-aria-posinset="1" data-list-defn-props=  '{"335552541":1,"335559684":-2,"335559685":720,"335559991":360,"469769226":"Symbol","469769242":[8226],"469777803":"left","469777804":"?","469777815":"multilevel"}' data-listid="1" data-font=  "Symbol" data-leveltext="?"><font face="Verdana" size="4">&nbsp;</font></p>  <ul>    <li data-aria-level="1" data-aria-posinset="2" data-list-defn-props=    '{"335552541":1,"335559684":-2,"335559685":720,"335559991":360,"469769226":"Symbol","469769242":[8226],"469777803":"left","469777804":"?","469777815":"multilevel"}' data-listid="1" data-font=    "Symbol" data-leveltext="?"><font face="Verdana"><font size="4"><span data-contrast="none">Interpretatie: een&nbsp;interpreter&nbsp;leest stukje bij beetje tekst van de broncode in, interpreteert    deze in termen van betekenisvolle instructies en voert die, gesteund door een runtimebibliotheek, direct uit. Een programma dat zo werkt, wordt meestal een&nbsp;script&nbsp;genoemd en de    programmeertaal in kwestie een&nbsp;scripttaal.</span><span data-ccp-props="{}">&nbsp;</span></font></font></li>  </ul>  <p data-aria-level="1" data-aria-posinset="2" data-list-defn-props=  '{"335552541":1,"335559684":-2,"335559685":720,"335559991":360,"469769226":"Symbol","469769242":[8226],"469777803":"left","469777804":"?","469777815":"multilevel"}' data-listid="1" data-font=  "Symbol" data-leveltext="?"><font face="Verdana" size="4">&nbsp;</font></p>  <ul>    <li data-aria-level="1" data-aria-posinset="3" data-list-defn-props=    '{"335552541":1,"335559684":-2,"335559685":720,"335559991":360,"469769226":"Symbol","469769242":[8226],"469777803":"left","469777804":"?","469777815":"multilevel"}' data-listid="1" data-font=    "Symbol" data-leveltext="?"><font face="Verdana"><font size="4"><span data-contrast="none">Assemblage: een&nbsp;assembleertaal&nbsp;maakt het mogelijk om programma's te schrijven als reeksen    instructies en gegevens die direct op machinetaal af te beelden zijn, maar waarin op een wat meer symbolische manier gewerkt kan worden, bijvoorbeeld doordat de machine-instructies namen hebben,    geheugenadressen namen kunnen krijgen en&nbsp;macros's kunnen worden gebruikt; een&nbsp;assembler&nbsp;zet zulke code om naar bestanden met&nbsp;objectcode, die door een&nbsp;linker&nbsp;samen    met de al vooraf aanwezige objectcode van softwarebibliotheken tot een uitvoerbaar programma worden samengesteld.</span><span data-ccp-props="{}">&nbsp;</span></font></font></li>  </ul>  <ul>    <li data-aria-level="1" data-aria-posinset="1" data-list-defn-props=    '{"335552541":1,"335559684":-2,"335559685":720,"335559991":360,"469769226":"Symbol","469769242":[8226],"469777803":"left","469777804":"?","469777815":"multilevel"}' data-listid="1" data-font=    "Symbol" data-leveltext="?"><font face="Verdana"><font size="4"><span data-contrast="none">Compilatie: vertaling van de&nbsp;broncode&nbsp;naar een andere taal (de&nbsp;doeltaal) door    een&nbsp;compiler. De doeltaal kan assembleertaal zijn; of een speciaal voor het vertaalproces ontworpen machine-onafhankelijke tussentaal (bytecode, ook wel&nbsp;P-code&nbsp;genoemd), die    vervolgens gecompileerd of ge&iuml;nterpreteerd moet worden; of een andere programmeertaal.</span><span data-ccp-props='{"134233117":true,"134233118":true}'>&nbsp;</span></font></font></li>  </ul>  <p><span data-ccp-props="{}">&nbsp;</span></p></body></html>